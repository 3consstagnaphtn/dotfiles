" vim: filetype=vifm :
" Sample configuration file for vifm (last updated: 20 July, 2018)
" You can edit this file by hand.
" The " character at the beginning of a line comments out the line.
" Blank lines are ignored.
" The basic format for each item is shown with an example.

" ------------------------------------------------------------------------------

" This is the actual command used to start vi.  The default is vim.
" If you would like to use another vi clone such as Elvis or Vile
" you will need to change this setting.

set vicmd=$EDITOR

" This makes vifm perform file operations on its own instead of relying on
" standard utilities like `cp`.  While using `cp` and alike is a more universal
" solution, it's also much slower when processing large amounts of files and
" doesn't support progress measuring.

set syscalls

" Trash Directory
" The default is to move files that are deleted with dd or :d to
" the trash directory.  If you change this you will not be able to move
" files by deleting them and then using p to put the file in the new location.
" I recommend not changing this until you are familiar with vifm.
" This probably shouldn't be an option.

set trash

" This is how many directories to store in the directory history.

set history=1000

" Automatically resolve symbolic links on l or Enter.

set nofollowlinks

" With this option turned on you can run partially entered commands with
" unambiguous beginning using :! (e.g. :!Te instead of :!Terminal or :!Te<tab>).

" set fastrun

" Natural sort of (version) numbers within text.

set sortnumbers

" Maximum number of changes that can be undone.

set undolevels=100

" If you installed the vim.txt help file set vimhelp.
" If would rather use a plain text help file set novimhelp.

set novimhelp

" If you would like to run an executable file when you
" press return on the file name set this.

set norunexec

" Selected color scheme

colorscheme kst

" Format for displaying time in file list. For example:
" TIME_STAMP_FORMAT=%m/%d-%H:%M
" See man date or man strftime for details.

set timefmt=%m/%d\ %H:%M

" Show list of matches on tab completion in command-line mode

set wildmenu

" Display completions in a form of popup with descriptions of the matches

set wildstyle=popup

" Display suggestions in normal, visual and view modes for keys, marks and
" registers (at most 5 files).  In other view, when available.

set suggestoptions=normal,visual,view,otherpane,keys,marks,registers

" Ignore case in search patterns unless it contains at least one uppercase
" letter

set ignorecase
set smartcase

" Don't highlight search results automatically

set nohlsearch

" Use increment searching (search while typing)
set incsearch

" Try to leave some space from cursor to upper/lower border in lists

set scrolloff=4

" Don't do too many requests to slow file systems

if !has('win')
    set slowfs=curlftpfs
endif

" Set custom status line look

" set statusline="  Hint: %z%= %A %10u:%-7g %15s %20d  "


" ------------------------------------------------------------------------------

" :com[mand][!] command_name action
" The following macros can be used in a command
" %a is replaced with the user arguments.
" %c the current file under the cursor.
" %C the current file under the cursor in the other directory.
" %f the current selected file, or files.
" %F the current selected file, or files in the other directory.
" %b same as %f %F.
" %d the current directory name.
" %D the other window directory name.
" %m run the command in a menu window

command! df df -h %m 2> /dev/null
command! diff vim -d %f %F
command! zip zip -r %f.zip %f
command! run !! ./%f
command! make !!make %a
command! mkcd :mkdir %a | cd %a
command! vgrep vim "+grep %a"
command! reload :write | restart

" ------------------------------------------------------------------------------

" The file type is for the default programs to be used with
" a file extension.
" :filetype pattern1,pattern2 defaultprogram,program2
" :fileviewer pattern1,pattern2 consoleviewer
" The other programs for the file type can be accessed with the :file command
" The command macros %f, %F, %d, %F may be used in the commands.
" The %a macro is ignored.  To use a % you must put %%.

" For automated FUSE mounts, you must register an extension with :file[x]type
" in one of following formats:
"
" :filetype extensions FUSE_MOUNT|some_mount_command using %SOURCE_FILE and %DESTINATION_DIR variables
" %SOURCE_FILE and %DESTINATION_DIR are filled in by vifm at runtime.
" A sample line might look like this:
" :filetype *.zip,*.jar,*.war,*.ear FUSE_MOUNT|fuse-zip %SOURCE_FILE %DESTINATION_DIR
"
" :filetype extensions FUSE_MOUNT2|some_mount_command using %PARAM and %DESTINATION_DIR variables
" %PARAM and %DESTINATION_DIR are filled in by vifm at runtime.
" A sample line might look like this:
" :filetype *.ssh FUSE_MOUNT2|sshfs %PARAM %DESTINATION_DIR
" %PARAM value is filled from the first line of file (whole line).
" Example first line for SshMount filetype: root@127.0.0.1:/
"
" You can also add %CLEAR if you want to clear screen before running FUSE
" program.

"fileview */ tree %c -L 1 --dirsfirst
nmap q ZQ

filetype *.csv,*.xlsx sc-im %c
fileviewer *.csv sed "s/,,,,/,,-,,/g;s/,,/ /g" %c | column -t | sed "s/ - /  /g" | cut -c -%pw

" pdf
fileviewer *.pdf
        \ vifmimg pdf %px %py %pw %ph %c
        \ %pc
        \ vifmimg clear

" fonts
fileviewer *.otf,*.ttf,*.woff
        \ vifmimg font %px %py %pw %ph %c
        \ %pc
        \ vifmimg clear


" audio
fileviewer *.flac,*.wav,*.m4a,*.wma,*.ape,*.ac3,*.og[agx],*.spx,*.opus,*.mp3
        \ vifmimg audio %px %py %pw %ph %c
        \ %pc
        \ vifmimg clear


fileviewer *.avi,*.mp4,*.wmv,*.dat,*.3gp,*.ogv,*.mkv,*.mpg,*.mpeg,*.vob,
          \*.fl[icv],*.m2v,*.mov,*.webm,*.ts,*.mts,*.m4v,*.r[am],*.qt,*.divx,
          \*.as[fx]
        \ vifmimg video %px %py %pw %ph %c
        \ %pc
        \ vifmimg clear
" images

filextype *.bmp,*.jpg,*.jpeg,*.png,*.gif,*.xpm mpv %c %i &

fileviewer *.bmp,*.jpg,*.jpeg,*.png,*.xpm
        \ vifmimg draw %px %py %pw %ph %c
        \ %pc
        \ vifmimg clear

" archive
fileviewer *.zip,*.jar,*.war,*.ear,*.oxt zip -sf %c
fileviewer *.tgz,*.tar.gz tar -tzf %c
fileviewer *.tar.bz2,*.tbz2 tar -tjf %c
fileviewer *.tar.txz,*.txz xz --list %c
fileviewer *.tar tar -tf %c
fileviewer *.rar unrar v %c
fileviewer *.7z 7z l %c


" Show ls in the preview window, it creates a similar look as ranger.
" The default directory tree thing is really messy
fileviewer */ ls --color --group-directories-first

" Dont show anything on "../"
fileview ../ echo >/dev/null


" ------------------------------------------------------------------------------

set vifminfo=dhistory,chistory,state,shistory,phistory,fhistory,dirstack,registers,bookmarks,bmarks

" ------------------------------------------------------------------------------

" Go to the file that is right before "../" for going to the top most file
nnoremap gg ggj

" Quick shortcuts to some dirs 
nnoremap bin :cd ~/bin<cr>
nnoremap docs :cd ~/documents<cr>
nnoremap dls :cd ~/downloads<cr>
nnoremap pics :cd ~/pictures<cr>
nnoremap walls :cd ~/pictures/walls<cr>
nnoremap vids :cd ~/videos<cr>
nnoremap dots :cd ~/dotfiles<cr>
nnoremap shots :cd ~/pictures/screenshots<cr>
nnoremap music :cd ~/music<cr>
nnoremap cd :cd<cr>

" Open with preview window
:view


" Start shell in current directory
nnoremap s :shell<cr>

" Display sorting dialog
nnoremap S :sort<cr>

" Toggle visibility of preview window
nnoremap w :view<cr>
vnoremap w :view<cr>gv

" Open file in existing instance of gvim
nnoremap o :!nvim %f<cr>
" Open file in new instance of gvim
nnoremap O :!nvim %f<cr>

" Open file in the background using its default program
nnoremap gb :file &<cr>l

" Yank current directory path into the clipboard
nnoremap yd :!echo %d | xclip -i -selection clipboard %i<cr>

" Yank current file path into the clipboard
nnoremap yf :!echo %c:p | xclip -i -selection clipboard %i<cr>

" Mappings for faster renaming
nnoremap I cw<c-a>
nnoremap cc cw<c-u>
nnoremap A cw

" Open console in current directory
nnoremap ,t :!kitty &<cr>

" Toggle wrap setting on ,w key
nnoremap ,w :set wrap!<cr>

" Example of standard two-panel file managers mappings
nnoremap <f3> :!less %f<cr>
nnoremap <f4> :edit<cr>
nnoremap <f5> :copy<cr>
nnoremap <f6> :move<cr>
nnoremap <f7> :mkdir<space>
nnoremap <f8> :delete<cr>

" ------------------------------------------------------------------------------

" Various customization examples

" Use ag (the silver searcher) instead of grep
set grepprg='ag --line-numbers %i %a %s'

command! FZFlocate :set noquickview | :execute 'goto "'.system('locate $HOME | fzf --height 10 2>/dev/tty ').'"%IU' | redraw
command! FZFfind :set noquickview | :execute 'goto "'.system('fd | fzf --height 10 2>/dev/tty ').'"%IU' | redraw

nnoremap f :FZFfind<cr>
nnoremap mkd :mkdir<space>

" Ranger devicons for ViFM, slightly modified
" https://github.com/cirala/vifm_devicons
"
" Filetypes/directories
"set classify='  :dir:/, :exe:, :reg:, :link:,? :?:, ::../::'
"
"" Specific files
"set classify+='  ::.Xdefaults,,.Xresources,,.bashprofile,,.bash_profile,,.bashrc,,.dmrc,,.d_store,,.fasd,,.gitconfig,,.gitignore,,.jack-settings,,.mime.types,,.nvidia-settings-rc,,.pam_environment,,.profile,,.recently-used,,.selected_editor,,.xinitpurc,,.zprofile,,.yarnc,,.snclirc,,.tmux.conf,,.urlview,,.config,,.ini,,.user-dirs.dirs,,.mimeapps.list,,.offlineimaprc,,.msmtprc,,.Xauthority,,config::'
"set classify+='  ::dropbox::'
"set classify+='  ::favicon.*,,README,,readme::'
"set classify+='  ::.vim,,.vimrc,,.gvimrc,,.vifm::'
"set classify+='  ::gruntfile.coffee,,gruntfile.js,,gruntfile.ls::'
"set classify+=' ::gulpfile.coffee,,gulpfile.js,,gulpfile.ls::'
"set classify+=' ::ledger::'
"set classify+=' ::license,,copyright,,copying,,LICENSE,,COPYRIGHT,,COPYING::'
"set classify+=' ::node_modules::'
"set classify+=' ::react.jsx::'
"
"" File extensions 
"set classify+='λ ::*.ml,,*.mli::'
"set classify+=' ::*.styl::'
"set classify+=' ::*.scss::'
"set classify+=' ::*.py,,*.pyc,,*.pyd,,*.pyo::'
"set classify+=' ::*.php::'
"set classify+=' ::*.markdown,,*.md::'
"set classify+=' ::*.json::'
"set classify+='  ::*.js::'
"set classify+='  ::*.bmp,,*.gif,,*.ico,,*.jpeg,,*.jpg,,*.png,,*.svg,,*.svgz,,*.tga,,*.tiff,,*.xmb,,*.xcf,,*.xpm,,*.xspf,,*.xwd,,*.cr2,,*.dng,,*.3fr,,*.ari,,*.arw,,*.bay,,*.crw,,*.cr3,,*.cap,,*.data,,*.dcs,,*.dcr,,*drf,,*.eip,,*.erf,,*.fff,,*.gpr,,*.iiq,,*.k25,,*.kdc,,*.mdc,,.*mef,,*.mos,,.*.mrw,,.*.obm,,*.orf,,*.pef,,*.ptx,,*.pxn,,*.r3d,,*.raf,,*.raw,,*.rwl,,*.rw2,,*.rwz,,*.sr2,,*.srf,,*.srf,,*.srw,,*.tif,,*.x3f::'
"set classify+='  ::*.ejs,,*.htm,,*.html,,*.slim,,*.xml::'
"set classify+='  ::*.mustasche::'
"set classify+=' ::*.css,,*.less,,*.bat,,*.conf,,*.ini,,*.rc,,*.yml,,*.cfg,,*.rc::'
"set classify+='  ::*.rss::'
"set classify+='  ::*.coffee::'
"set classify+=' ::*.twig::'
"set classify+='  ::*.c++,,*.cc,,*.c,,*.cpp,,*.cxx,,*.c,,*.h,,*.hpp::'
"set classify+='  ::*.hs,,*.lhs::'
"set classify+='  ::*.lua::'
"set classify+=' ::*.jl::'
"set classify+=' ::*.go::'
"set classify+='  ::*.ts::'
"set classify+='  ::*.db,,*.dump,,*.sql::'
"set classify+='  ::*.sln,,*.suo::'
"set classify+='  ::*.exe::'
"set classify+='  ::*.diff,,*.sum,,*.md5,,*.sha512::'
"set classify+='  ::*.scala::'
"set classify+='  ::*.java,,*.jar::'
"set classify+='  ::*.xul::'
"set classify+='  ::*.clj,,*.cljc::'
"set classify+='  ::*.pl,,*.pm,,*.t::'
"set classify+='  ::*.cljs,,*.edn::'
"set classify+='  ::*.rb::'
"set classify+='  ::*.fish,,*.sh,,*.bash::'
"set classify+='  ::*.dart::'
"set classify+='  ::*.f#,,*.fs,,*.fsi,,*.fsscript,,*.fsx::'
"set classify+='  ::*.rlib,,*.rs::'
"set classify+='  ::*.d::'
"set classify+='  ::*.erl,,*.hrl::'
"set classify+='  ::*.ai::'
"set classify+='  ::*.psb,,*.psd::'
"set classify+='  ::*.jsx::'
"set classify+='  ::*.vim,,*.vimrc::'
"set classify+='  ::*.aac,,*.anx,,*.asf,,*.au,,*.axa,,*.flac,,*.m2a,,*.m4a,,*.mid,,*.midi,,*.mp3,,*.mpc,,*.oga,,*.ogg,,*.ogx,,*.ra,,*.ram,,*.rm,,*.spx,,*.wav,,*.wma,,*.ac3::'
"set classify+='  ::*.avi,,*.flv,,*.mkv,,*.mov,,*.mov,,*.mp4,,*.mpeg,,*.mpg,,*.webm::'
"set classify+='  ::*.epub,,*.fb2,,*.djvu::'
"set classify+='  ::*.pdf::'
"set classify+='  ::*.7z,,*.apk,,*.bz2,,*.cab,,*.cpio,,*.deb,,*.gem,,*.gz,,*.gzip,,*.lh,,*.lzh,,*.lzma,,*.rar,,*.rpm,,*.tar,,*.tgz,,*.xz,,*.zip::'
"set classify+='  ::*.cbr,,*.cbz::'
"set classify+='  ::*.log::'
"set classify+='  ::*.doc,,*.docx,,*.adoc::'
"set classify+='  ::*.xls,,*.xls,,*.xlsmx::'
"set classify+='  ::*.pptx,,*.ppt::'

" file types
set classify='  :dir:/,  :exe:,  :reg:,  :link:'
" various file names
set classify+='  ::../::,  ::*.sh::,  ::*.[hc]pp::,  ::*.[hc]::,  ::/^copying|license$/::,  ::.git/,,*.git/::,  ::*.epub,,*.fb2,,*.djvu::,  ::*.pdf::,  ::*.htm,,*.html,,**.[sx]html,,*.xml::'
" archives
set classify+='  ::*.7z,,*.ace,,*.arj,,*.bz2,,*.cpio,,*.deb,,*.dz,,*.gz,,*.jar,,*.lzh,,*.lzma,,*.rar,,*.rpm,,*.rz,,*.tar,,*.taz,,*.tb2,,*.tbz,,*.tbz2,,*.tgz,,*.tlz,,*.trz,,*.txz,,*.tz,,*.tz2,,*.xz,,*.z,,*.zip,,*.zoo::'
" images
set classify+='  ::*.bmp,,*.gif,,*.jpeg,,*.jpg,,*.ico,,*.png,,*.ppm,,*.svg,,*.svgz,,*.tga,,*.tif,,*.tiff,,*.xbm,,*.xcf,,*.xpm,,*.xspf,,*.xwd::'
" audio
set classify+='  ::*.aac,,*.anx,,*.asf,,*.au,,*.axa,,*.flac,,*.m2a,,*.m4a,,*.mid,,*.midi,,*.mp3,,*.mpc,,*.oga,,*.ogg,,*.ogx,,*.ra,,*.ram,,*.rm,,*.spx,,*.wav,,*.wma,,*.ac3::'
" media
set classify+='  ::*.avi,,*.ts,,*.axv,,*.divx,,*.m2v,,*.m4p,,*.m4v,,.mka,,*.mkv,,*.mov,,*.mp4,,*.flv,,*.mp4v,,*.mpeg,,*.mpg,,*.nuv,,*.ogv,,*.pbm,,*.pgm,,*.qt,,*.vob,,*.wmv,,*.xvid::'
" office files
set classify+='  ::*.doc,,*.docx::,  ::*.xls,,*.xls[mx]::,  ::*.pptx,,*.ppt::'
